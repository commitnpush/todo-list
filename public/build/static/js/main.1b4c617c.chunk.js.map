{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","components/Pallete.js","App.js","serviceWorker.js","index.js"],"names":["TodoListTemplate","_ref","form","pallete","children","react_default","a","createElement","className","Form","value","onChange","onCreate","onKeyPress","color","style","onClick","TodoItem","_this$props","this","props","text","checked","id","onToggle","onRemove","e","stopPropagation","concat","Component","TodoItemList","nextProps","nextState","todos","console","log","todoList","map","src_components_TodoItem","key","Pallete","colors","colorList","selected","background","fontSize","react","App","state","input","handleColor","target","innerText","_this$state","_this","nextColors","setState","handleChange","handleCreate","_this$state2","handleKeyPress","hadleCreate","handleToggle","index","findIndex","todo","nextTodos","Object","toConsumableArray","objectSpread","handleRemove","filter","src_components_TodoListTemplate","src_components_Form","src_components_Pallete","components_TodoItemList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b4c617c.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoListTemplate.css';\n\nconst TodoListTemplate = ({form, pallete, children}) => {\n  return (\n    <main className=\"todo-list-template\">\n      <div className=\"title\">오늘 할 일</div>\n      <section className=\"pallete-wrapper\">\n        {pallete}\n      </section>\n      <section className=\"form-wrapper\">\n        {form}\n      </section>\n      <section className=\"todos-wrapper\">\n        {children}\n      </section>\n    </main>\n  );\n}\n\nexport default TodoListTemplate;\n","import React from 'react';\nimport './Form.css';\nconst Form = ({value, onChange, onCreate, onKeyPress, color}) => {\n  return (\n    <div className=\"form\">\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress}\n            style={{color:color}}/>\n      <div className=\"create-button\" onClick={onCreate}>추가</div>\n    </div>\n  );\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './TodoItem.css';\n\nclass TodoItem extends Component{\n  render(){\n    const { text, checked, id, onToggle, onRemove, color } = this.props;\n    return (\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\n        <div className=\"remove\" onClick={(e) => {\n          e.stopPropagation(); // onToggle이 실행되지 않도록 함\n          onRemove(id)}\n        }>&times;</div>\n        <div className={`todo-text ${checked ? 'checked' : ''}`}>\n          <div style={{color:color}}>{text}</div>\n        </div>\n        {checked && (<div className='check-mark'></div>)}\n      </div>\n    );\n  }\n}\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoItemList extends Component{\n  shouldComponentUpdate(nextProps, nextState){\n    return this.props.todos !== nextProps.todos;\n  }\n  render(){\n    console.log(1);\n    const { todos, onToggle, onRemove } = this.props;\n    const todoList = todos.map(({id, text, checked, color}) =>(\n      <TodoItem\n        id={id}\n        checked={checked}\n        text={text}\n        onToggle={onToggle}\n        onRemove={onRemove}\n        key={id}\n        color={color}/>\n    ));\n    return(\n      <div>\n        {todoList}\n      </div>\n    );\n  }\n}\n\nexport default TodoItemList;\n","import React, {Component, Fragment} from 'react';\nimport './Pallete.css';\n\nclass Pallete extends Component{\n\n  render(){\n    const { colors, onClick } = this.props;\n    const colorList = colors.map((color) => (\n      <div className={`color ${color.selected ? 'selected' : ''}`}\n          style={{background: color.color, fontSize:\"0px\"}}\n          key={color.color}\n          onClick={onClick}\n          color={color.color}>{color.color}</div>\n    ));\n    return(\n      <Fragment>{colorList}</Fragment>\n    );\n  }\n}\n\nexport default Pallete;\n","import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport Pallete from './components/Pallete';\nclass App extends Component {\n\n  id = 3;\n\n  state = {\n    input: '',\n    todos: [\n      {id:0, text: ' 리엑트 소개', checked: false, color:\"#000000\"},\n      {id:1, text: ' 리액트 소개', checked: true, color:\"#000000\"},\n      {id:2, text: ' 리약트 소개', checked: false, color:\"#000000\"}\n    ],\n    color: \"black\",\n    colors: [\n      {color:\"#343a40\", selected: true},\n      {color:\"#f03e3e\", selected: false},\n      {color:\"#12b886\", selected: false},\n      {color:\"#228ae6\", selected: false}\n    ]\n  }\n\n  handleColor = (e) => {\n    console.log(e.target.innerText);\n    const {color, colors} = this.state;\n    const nextColors = colors.map((color) => {\n      if(color.color == e.target.innerText){\n        color.selected = true;\n      }else\n      {\n        color.selected = false;\n      }\n      return color;\n    });\n    console.log(nextColors);\n    this.setState({\n      color: e.target.innerText,\n      colors:nextColors\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const {input, todos, color} = this.state;\n    this.setState({\n      input: '',\n      todos: todos.concat({id: this.id++,\n                          text: input,\n                          checked: false,\n                          color:color})\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      this.hadleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const {todos} = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; //서택한 객체\n    const nextTodos = [...todos];\n\n    //기존의 값들을 복사하고 checked 값을 덮어 쓰기\n    nextTodos[index] = {...selected,\n                        checked: !selected.checked};\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const {todos} = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id != id)\n    });\n\n  }\n\n  render() {\n    return (\n      <div>\n        <TodoListTemplate form={(\n          <Form value={this.state.input}\n            onKeyPress={this.handleKeyPress}\n            onChange={this.handleChange}\n            onCreate={this.handleCreate}\n            color={this.state.color}\n          />\n          )}\n          pallete={(\n            <Pallete colors={this.state.colors}\n                      onClick={this.handleColor}/>\n          )}\n        >\n          <TodoItemList todos={this.state.todos}\n                        onToggle={this.handleToggle}\n                        onRemove={this.handleRemove}/>\n        </TodoListTemplate>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}